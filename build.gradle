apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "edu.tsinghua.location.research.module"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 4
        versionName "1.3"
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes.each { buildType ->
        def file = rootProject.file('signing.properties')
        if (file.exists()) {
            def cfg = signingConfigs.maybeCreate(buildType.name)
            loadSigningConfig(cfg, file)
            buildType.signingConfig = cfg
        }
    }
}

dependencies {
    apt 'com.bluelinelabs:logansquare-compiler:1.3.4'
    compile 'com.bluelinelabs:logansquare:1.3.4'
    compile 'com.android.support:support-annotations:23.1.1'
    compile 'com.android.support:support-v4:23.1.1'
    provided files('XposedBridgeApi-20150213.jar')
}

repositories {
    jcenter()
}

def loadSigningConfig(def cfg, def file) {
    Properties signingProp = new Properties()
    signingProp.load(file.newInputStream())
    cfg.setStoreFile(new File((String) signingProp.get('storeFile')))
    cfg.setStorePassword((String) signingProp.get('storePassword'))
    cfg.setKeyAlias((String) signingProp.get('keyAlias'))
    cfg.setKeyPassword((String) signingProp.get('keyPassword'))
}
